import './globals.css';

import localFont from 'next/font/local';
import Link from 'next/link';

import { Button } from '@/components/ui/button';
import { Toaster } from '@/components/ui/toaster';
import { getUser } from '@/lib/auth/getUser';

import LogoutBtn from './LogoutBtn';

import type { Metadata } from 'next';

const geistSans = localFont({
  src: './fonts/GeistVF.woff',
  variable: '--font-geist-sans',
  weight: '100 900',
});
const geistMono = localFont({
  src: './fonts/GeistMonoVF.woff',
  variable: '--font-geist-mono',
  weight: '100 900',
});

export const metadata: Metadata = {
  title: 'Create Next App',
  description: 'Generated by create next app',
};

export default async function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  return (
    <html lang="en">
      <body className={`${geistSans.variable} ${geistMono.variable} antialiased`}>
        <div className="flex flex-col min-h-screen">
          <header className="bg-white shadow-sm">
            <nav className="container mx-auto px-4 py-4 flex justify-between items-center">
              <Link href="/" className="text-2xl font-bold text-primary">
                JobBoard
              </Link>
              <div className="space-x-4">
                <Link href="/jobs" className="text-gray-600 hover:text-primary">
                  Jobs
                </Link>
                <Link href="/employers" className="text-gray-600 hover:text-primary">
                  For Employers
                </Link>
                <AuthBtns />
              </div>
            </nav>
          </header>
          <main className="flex-grow container mx-auto px-4 py-8">{children}</main>
          <footer className="bg-gray-100">
            <div className="container mx-auto px-4 py-6 text-center text-gray-600">
              Â© 2024 JobBoard. All rights reserved.
            </div>
          </footer>
        </div>
        <Toaster />
      </body>
    </html>
  );
}

const AuthBtns = async () => {
  const user = await getUser();

  if (!user) {
    return (
      <>
        <Button asChild variant="outline">
          <Link href="/login">Login</Link>
        </Button>
        <Button asChild>
          <Link href="/register">Register</Link>
        </Button>
      </>
    );
  }

  return (
    <>
      <span className="text-xl mr-4 font-bold">Welcome, {user.name}!</span>
      <LogoutBtn />
    </>
  );
};
